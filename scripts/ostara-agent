#!/bin/bash
set -e

ostaraDir="$HOME/.ostara"
agentYml="$ostaraDir/agent.yml"
existingProcess=$(pgrep -f ostara-agent.jar 2>&1 || echo "")

start() {
  if [[ -n $existingProcess ]]
   then
    echo "Agent is already running."
    exit 1
  fi
  echo "Starting agent..."
  nohup java -jar ##PREFIX##/ostara-agent.jar --spring.config.additional-location $agentYml >$ostaraDir/agent.log 2>&1 &
  echo "Agent started at PID $!, logs at $ostaraDir/agent.log"
  exit 0
}

stop() {
  _checkConfigExists
  if [[ -z $existingProcess ]]
  then
    echo "Agent is not running."
    exit 1
  fi
  echo "Stopping agent..."
  pkill -9 -f ostara-agent.jar 2>&1
  if [[ $? -ne 0 ]]; then
    echo "Failed to stop agent."
    exit 1
  fi
  echo "Agent stopped."
  exit 0
}

status() {
  _checkConfigExists
  if [[ -n $existingProcess ]]
  then
    echo "Agent is running."
    exit 0
  else
    echo "Agent is not running."
    exit 1
  fi
}

setup() {
  if [[ ! -d $ostaraDir ]]
  then
    mkdir -p "$ostaraDir"
  fi

  if [[ -f "$agentYml" ]]; then
    echo "Configuration file already exists at $agentYml, delete it? [y/N]"
    read -r answer
    if [[ "$answer" != "y" ]]
     then
       echo "Aborting."
      exit 0
    else
      rm "$agentYml"

    fi
  fi
  apiKey=$(uuidgen)
  cat <<EOF >>"$agentYml"
ostara:
  agent:
    main:
      api-key: $apiKey
EOF

  echo "Configuration file created at $agentYml, please edit it and restart the agent."
  exit 0
}

_checkConfigExists() {
    if [[ ! -f $agentYml ]]
    then
      echo "Configuration file not found at $agentYml, please run setup first."
      exit 1
    fi
}
if declare -f "$1" > /dev/null
then
  "$@"
else
  echo "Usage: ostara-agent {start|stop|status|setup}"
  exit 1
fi
